//--------------------------------------------------
// Login Page Styles
//--------------------------------------------------

@import "settings";
@import "mixins";
@import "normalize";

@import
	"foundation/components/block-grid",
	"foundation/components/buttons",
	"foundation/components/clearing",
	"foundation/components/forms",
	"foundation/components/grid",
	"foundation/components/keystrokes",
	"foundation/components/labels",
	"foundation/components/type",
	"foundation/components/visibility";

@import "compass/css3/transition";
@import "compass/css3/border-radius";

@import "partials/paper";

@import url(http://fonts.googleapis.com/css?family=Open+Sans:300,400,700,400italic);

// General styles
body {
	background-color: #fff;
	color: rgba(0,0,0,0.54);
}
::-moz-selection {
	background: $orange;
	color: rgba(255,255,255,0.87);
}
::selection {
	background: $orange;
	color: rgba(255,255,255,0.87);
}
.card,
.cards {
	background-color: #f7f7f7;
}
.container {
	margin: 0 rem-calc(16);
	padding: rem-calc(16) 0;
	@media #{$small-only} {
		margin: 0 rem-calc(10);
	}
}
h1 {
	color: rgba(0,0,0,0.54);
	font-size: rem-calc(56);
	margin: 1rem 0 2rem;
}
@media #{$small-only} {
	.columns {
		padding-left: 0;
		padding-right: 0;
	}
	h1 {
		font-size: rem-calc(45);
	}
}
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	padding: 0;
	overflow: hidden;
	clip: rect(0 0 0 0); // IE6, IE7
	clip: rect(0,0,0,0);
	border: 0;

	// Use in conjunction with .sr-only to only display content when it's
	// focused. Useful for "Skip to main content" links:
	// See http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
	// Credit: HTML5 Boilerplate
	&.focusable {
		&:active,
		&:focus {
			position: static;
			width: auto;
			height: auto;
			margin: 0;
			overflow: visible;
			clip: auto;
		}
	}
}

// Login form
#loginform {
	p {
		font-weight: 300;
	}
	input[type="email"],
	input[type="password"] {
		font-size: rem-calc(16);
		margin-top: rem-calc(16);
		margin-bottom: rem-calc(8);
		padding: 0;
		padding-bottom: rem-calc(8);
		border: none;
		border-bottom: $input-border-width $input-border-style rgba(0,0,0,0.26);
		background-color: transparent;
		color: rgba(0,0,0,0.54);
		box-shadow: none;
		@include placeholder {
			color: rgba(0,0,0,0.26);
		}
		@include transition(border-bottom-color 0.4s, color 0.4s);

		&:focus {
			border-bottom-color: $orange-light;
		}

		// Damned WebKit!
		&:-webkit-autofill {
			-webkit-box-shadow: 0 0 0px 1000px #f7f7f7 inset !important;
			-webkit-text-fill-color: rgba(0,0,0,0.26) !important;
			&:focus {
				-webkit-text-fill-color: rgba(0,0,0,0.54) !important;
			}
		}
	}
	.checkbox-wrapper {
		margin-bottom: rem-calc(8);
	}
	input[type="checkbox"] {
		border: 1px solid #bbb;
		background: #fff;
		color: #555;
		display: inline-block;
		line-height: 0;
		outline: 0;
		padding: 0 !important;
		text-align: center;
		width: rem-calc(20);
		height: rem-calc(20);
		margin-bottom: 0;
		vertical-align: middle;
		position: relative;
		top: -1px;
		*overflow: hidden;

		&:checked {
			background: $success-color !important;
		}
	}
	.checkbox-label {
		display: inline-block;
		padding-left: rem-calc(20);
		text-indent: rem-calc(-20);
		font-size: rem-calc(16);
		line-height: rem-calc(20);
	}
	label {
		color: rgba(0,0,0,0.54);
	}
	button {
		font-size: rem-calc(16);
		line-height: 1;
		text-transform: uppercase;
		padding: rem-calc(10);
		margin: rem-calc(16) 0;
		text-align: center;
		@include border-radius(rem-calc(2));
		// box-shadow: 0 0 0;
		@include transition(all 0.4s);
		&:hover {
			background-color: $orange-light;
			box-shadow: $z-depth-1;
		}
		&:focus {
			background-color: $orange-dark;
			box-shadow: $z-depth-inset-1;
			outline: none;
		}
	}
}